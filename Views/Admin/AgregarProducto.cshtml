@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Agregar Producto - TiendaOnline</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <link rel="stylesheet" href="~/css/AdminagregarProducto.css" />
</head>
<body>
    <div class="container py-5">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h2 class="mb-0"><i class="fas fa-tshirt me-2"></i>Agregar Producto</h2>
            </div>
            <div class="card-body p-4">
                <form asp-action="AgregaProducto" method="post" enctype="multipart/form-data" id="productForm">
                    <div class="row">
                        <!-- Columna izquierda - Información del producto -->
                        <div class="col-md-7">
                            <input type="hidden" id="IDProducto" name="Producto.IDProducto" value="@Model.Producto.IDProducto" />

                            <!-- Campo Nombre Producto -->
                            <div class="form-group">
                                <label for="Nombre" class="form-label required-field">Nombre del Producto</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-tag"></i></span>
                                    <input type="text" class="form-control" id="Nombre" name="Producto.Nombre" value="@Model.Producto.Nombre" required placeholder="Ej: Camisa a cuadros manga larga" />
                                </div>
                            </div>

                            <!-- Campo Descripción Producto -->
                            <div class="form-group">
                                <label for="Descripcion" class="form-label">Descripción del Producto</label>
                                <textarea class="form-control" id="Descripcion" name="Producto.Descripcion" rows="3" placeholder="Ej: Composición: 60% Algodón / 40% Poliéster">@Model.Producto.Descripcion</textarea>
                            </div>

                            <!-- Campo Categoría -->
                            <div class="form-group">
                                <label for="IDCategoria" class="form-label required-field">Categoría</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-folder"></i></span>
                                    <select class="form-select" id="IDCategoria" name="Producto.IDCategoria" required>
                                        <option value="" disabled selected>Seleccione una categoría</option>
                                        @foreach (var categoria in Model.Categorias)
                                        {
                                            <option value="@categoria.IDCategoria">@categoria.Nombre</option>
                                        }
                                    </select>
                                </div>
                            </div>

                            

                            <div class="row">
                                <!-- Campo Stock Producto -->
                                <div class="col-md-6 form-group">
                                    <label for="Stock" class="form-label required-field">Cantidad en Stock</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-cubes"></i></span>
                                        <input type="number" class="form-control" id="Stock" name="Producto.Stock" value="@Model.Producto.Stock" required placeholder="0" />
                                    </div>
                                </div>

                                <!-- Campo Precio Producto -->
                                <div class="col-md-6 form-group">
                                    <label for="Precio" class="form-label required-field">Precio Regular</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-dollar-sign"></i></span>
                                        <input type="number" step="0.01" class="form-control" id="Precio" name="Producto.PrecioActual" value="@Model.Producto.PrecioActual" required placeholder="0.00" />
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <!-- Campo Talla Producto -->
                                <div class="col-md-6 form-group">
                                    <label for="Talla" class="form-label">Talla</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-ruler"></i></span>
                                        <input type="text" class="form-control" id="Talla" name="Producto.Talla" value="@Model.Producto.Talla" placeholder="Ej: S, M, L, XL" />
                                    </div>
                                </div>

                                <!-- Campo Detalle Producto -->
                                <div class="col-md-6 form-group">
                                    <label for="Detalle" class="form-label required-field">Detalle</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-info-circle"></i></span>
                                        <input type="text" class="form-control" id="Detalle" name="Producto.Detalle" value="@Model.Producto.Detalle" required placeholder="Ej: Manga larga, casual" />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Columna derecha - Imagen del producto -->
                        <div class="col-md-5">
                            <div class="section-title">Imagen del Producto</div>
                            
                            <!-- Previsualización de la imagen -->
                            <div class="img-preview-container">
                                <img id="imagePreview" src="#" alt="Vista previa" class="img-preview" style="display: none;" />
                                <div id="noImageText" class="text-center">
                                    <i class="fas fa-image fa-3x text-muted"></i>
                                    <p class="text-muted mt-2 mb-0">Vista previa</p>
                                </div>
                            </div>

                            <!-- Campo Imagen Producto -->
                            <div class="file-upload">
                                <label for="Imagen" class="file-upload-btn" id="imageUploadLabel">
                                    <div class="text-center">
                                        <i class="fas fa-cloud-upload-alt fa-2x mb-2"></i>
                                        <p class="mb-0">Arrastra tu imagen aquí, o haz clic para seleccionar</p>
                                        <small class="text-muted">JPG, PNG permitidos</small>
                                    </div>
                                </label>
                                <input type="file" class="file-upload-input" id="Imagen" name="Producto.ImagenURL" accept="image/*" />
                            </div>

                            <!-- Información del archivo cargado -->
                            <div class="file-info" id="fileInfo" style="display: none;">
                                <i class="fas fa-file-image"></i>
                                <span class="file-name" id="fileName">nombre_archivo.jpg</span>
                                <i class="fas fa-check-circle file-check"></i>
                            </div>

                            <!-- Barra de progreso para la carga -->
                            <div class="upload-progress" id="uploadProgress">
                                <div class="progress">
                                    <div class="progress-bar bg-primary" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" id="progressBar"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Botones de acción -->
                    <div class="action-buttons mt-4">
                        <button type="button" class="btn btn-outline-secondary" onclick="window.history.back()">
    <i class="fas fa-times me-2"></i>Cancelar
</button>
                        <div>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-2"></i>Guardar Producto
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Scripts necesarios -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      document.querySelector('.btn-outline-secondary').addEventListener('click', function() {
    
    window.history.go(-1);
});
        document.addEventListener('DOMContentLoaded', function() {
            // Referencias a elementos
            const imageInput = document.getElementById('Imagen');
            const imagePreview = document.getElementById('imagePreview');
            const noImageText = document.getElementById('noImageText');
            const fileInfo = document.getElementById('fileInfo');
            const fileName = document.getElementById('fileName');
            const uploadProgress = document.getElementById('uploadProgress');
            const progressBar = document.getElementById('progressBar');
            const uploadLabel = document.getElementById('imageUploadLabel');

            // Previsualización de imagen
            imageInput.addEventListener('change', function() {
                if (this.files && this.files[0]) {
                    const reader = new FileReader();
                    
                    reader.onload = function(e) {
                        imagePreview.src = e.target.result;
                        imagePreview.style.display = 'block';
                        noImageText.style.display = 'none';
                        
                        // Mostrar información del archivo
                        fileName.textContent = imageInput.files[0].name;
                        fileInfo.style.display = 'flex';
                        
                        // Simular carga con barra de progreso
                        uploadProgress.style.display = 'block';
                        let progress = 0;
                        const interval = setInterval(function() {
                            progress += 10;
                            progressBar.style.width = progress + '%';
                            progressBar.setAttribute('aria-valuenow', progress);
                            
                            if (progress >= 100) {
                                clearInterval(interval);
                                setTimeout(function() {
                                    uploadProgress.style.display = 'none';
                                }, 500);
                            }
                        }, 100);
                    };
                    
                    reader.readAsDataURL(this.files[0]);
                }
            });
            
            // Funcionalidad de arrastrar y soltar para la imagen
            uploadLabel.addEventListener('dragover', function(e) {
                e.preventDefault();
                e.stopPropagation();
                this.classList.add('border-primary');
            });
            
            uploadLabel.addEventListener('dragleave', function(e) {
                e.preventDefault();
                e.stopPropagation();
                this.classList.remove('border-primary');
            });
            
            uploadLabel.addEventListener('drop', function(e) {
                e.preventDefault();
                e.stopPropagation();
                this.classList.remove('border-primary');
                
                if (e.dataTransfer.files && e.dataTransfer.files[0]) {
                    imageInput.files = e.dataTransfer.files;
                    
                    // Disparar manualmente el evento change
                    const event = new Event('change', { bubbles: true });
                    imageInput.dispatchEvent(event);
                }
            });
            
            // Hacer que el formulario sea más interactivo
            const formInputs = document.querySelectorAll('.form-control, .form-select');
            
            formInputs.forEach(input => {
                // Añadir clase cuando el campo está activo
                input.addEventListener('focus', function() {
                    this.closest('.input-group')?.classList.add('input-group-focus');
                });
                
                // Remover clase cuando el campo pierde el foco
                input.addEventListener('blur', function() {
                    this.closest('.input-group')?.classList.remove('input-group-focus');
                });
            });
            
            // Validación básica del formulario
            const productForm = document.getElementById('productForm');
            
            productForm.addEventListener('submit', function(e) {
                const requiredFields = document.querySelectorAll('[required]');
                let isValid = true;
                
                requiredFields.forEach(field => {
                    if (!field.value.trim()) {
                        isValid = false;
                        field.classList.add('is-invalid');
                    } else {
                        field.classList.remove('is-invalid');
                    }
                });
                
                if (!isValid) {
                    e.preventDefault();
                    alert('Por favor, completa todos los campos obligatorios');
                }
            });
            
            // Eliminar la clase 'is-invalid' cuando se introduce texto
            requiredFields = document.querySelectorAll('[required]');
            
            requiredFields.forEach(field => {
                field.addEventListener('input', function() {
                    if (this.value.trim()) {
                        this.classList.remove('is-invalid');
                    }
                });
            });
        });
    </script>
</body>
</html>
